@using MyHdfViewer.Models
@using Microsoft.FluentUI.AspNetCore.Components

<FluentCard>
    <FluentStack Orientation="Orientation.Vertical"
        HorizontalAlignment="HorizontalAlignment.Stretch"
        VerticalAlignment="VerticalAlignment.Center"
        HorizontalGap="4">
    <div class="card-body">

        @if (Node.Attributes.Any())
        {
            <h6>Attribute</h6>

            <FluentDataGrid Items="@NodeAttributes" >
                <PropertyColumn Property="@(node => node.Name)" style="width: 100%;" />
                <PropertyColumn Property="@(node => node.Value)" style="width: 100%;" />
            </FluentDataGrid>
        }
        else
        {
            <h6>No Attribute</h6>
        }

    </div>
    </FluentStack>
</FluentCard>

@code
{
    [Parameter]
    public Hdf5Node Node { get; set; } = null!;

    private record NodeAttribute(string Name, string Value);
    private IQueryable<NodeAttribute> NodeAttributes =>GetNodeAttributes();

    private IQueryable<NodeAttribute> GetNodeAttributes()
    {
        var attributes = new List<NodeAttribute>();

        foreach (var attr in Node.Attributes)
        {
            attributes.Add(new NodeAttribute(attr.Name, attr.Value.ToString() ?? ""));
        }

        return attributes.AsQueryable();
    }

    //private async Task LoadDataset()
    //{
    //    if (Node is Hdf5Dataset dataset && dataset.Data == null)
    //    {
    //        // Implement dataset loading logic here
    //        // For example:
    //        // await dataset.LoadDataAsync();
    //        // StateHasChanged();
    //    }
    //}
}
