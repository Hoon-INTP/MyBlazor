@using MyHdfViewer.Models
@using Microsoft.FluentUI.AspNetCore.Components

<FluentCard style="min-width: 300px; width: auto;">
    <FluentStack Orientation="Orientation.Vertical"
        HorizontalAlignment="HorizontalAlignment.Stretch"
        VerticalAlignment="VerticalAlignment.Center"
        HorizontalGap="4">
    <div class="card-body">

        @if (SelectedNode.Attributes.Any())
        {
            <h6>Attribute</h6>

            <FluentDataGrid Items="@NodeAttributes" >
                <PropertyColumn Property="@(Attr => Attr.Name)" style="width: 100%;" />
                <PropertyColumn Property="@(Attr => Attr.Value)" style="width: 100%;" />
            </FluentDataGrid>
        }
        else
        {
            <h6>No Attribute</h6>
        }

    </div>
    </FluentStack>
</FluentCard>

@code
{
    [Parameter]
    public Hdf5Node SelectedNode { get; set; } = null!;
    private Hdf5Node? oldSelectedNode;

    private record NodeAttribute(string Name, string Value);
    private IQueryable<NodeAttribute> NodeAttributes;

    protected override async Task OnParametersSetAsync()
    {
        if (SelectedNode != oldSelectedNode)
        {
            try
            {
                oldSelectedNode = SelectedNode;

                NodeAttributes = GetNodeAttributes();
            }
            finally
            {
                await InvokeAsync(StateHasChanged);
            }
        }
    }

    private IQueryable<NodeAttribute> GetNodeAttributes()
    {
        var attributes = new List<NodeAttribute>();

        foreach (var attr in SelectedNode.Attributes)
        {
            attributes.Add(new NodeAttribute(attr.Name, attr.Value.ToString() ?? ""));
        }

        return attributes.AsQueryable();
    }

    //private async Task LoadDataset()
    //{
    //    if (Node is Hdf5Dataset dataset && dataset.Data == null)
    //    {
    //        // Implement dataset loading logic here
    //        // For example:
    //        // await dataset.LoadDataAsync();
    //        // StateHasChanged();
    //    }
    //}
}
